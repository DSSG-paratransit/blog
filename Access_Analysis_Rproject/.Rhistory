dir
ls
mm colors
"mm colors"
cls
clear
quit()
dist = c(13, 4, 6, 9, 10, 13)
dist
dist(dist)
hist(dist)
hist(counts)
counts
quit()
dbinom(0, 100, 0.005)
dbinom(0:3, 100, 0.005)
sum(dbinom(0:3, 100, 0.005))
x = 0:3
y = dbinom(x,100,0.005)
plot(x, y, type = 'b')
par(mfrow=c(3,4))
x = 0:20
plot(x, dbinom(x,5,0.01), type="b")
plot(x, dbinom(x,5,0.1), type="b")
plot(x, dbinom(x,5,0.5), type="b")
plot(x, dbinom(x,5,0.9), type="b")
plot(x, dbinom(x,10,0.01), type="b")
plot(x, dbinom(x,10,0.1), type="b")
plot(x, dbinom(x,10,0.5), type="b")
plot(x, dbinom(x,10,0.9), type="b")
plot(x, dbinom(x,20,0.01), type="b")
plot(x, dbinom(x,20,0.1), type="b")
plot(x, dbinom(x,20,0.5), type="b")
plot(x, dbinom(x,20,0.9), type="b")
par(mfrow=c(1,1))
x = 0:10
plot(x,dpois(x,1), type = 'b')
lines(x,dpois(x,4), type = 'b', col=2)
lines(x,dpois(x,6), type = 'b', col=3)
?dnorm
rbinom(200,10,0.5)
rpois(100,4)
x = rnorm(10000,0,1)
x
hist(x,breaks=200)
hist(x,breaks=400)
hist(x,breaks=800)
hist(x,breaks=1000)
boxplot(x)
boxplot(x, range=0)
dat = read.table("http://www.stat.washington.edu/marzban/390/hist_dat.txt")
x  = dat[,]
x  = dat[,1]
dat
View(dat)
x
x1 = x[1:100]
x2=x[101:200]
par(mfrow = c(1,2))
hist(x,breaks=20)
boxplot(x1,x2)
dat = read.table("http://www.stat.washington.edu/marzban/390/attend_dat.txt", header=T)
x=dat$attendance
x
y=dat$gender
y
y=dat$Gender
y
y == 1
sum(y==1)
sum(y)
par(mfrow=c(2,2))
hist(x[y==0])
hist(x[y==1])
boxplot(x[y==0],x[y==1])
mean(x[y==0])
mean(x[y==1])
median(x[y==1])
median(x[y==0])
sd(x[y==0])
sd(x[y==1])
quantile(x[y=1])
quantile(x[y=0])
x[y=0]
x[y=1]
quantile(x[y=0], prob=c(0,.25,.5,.75,1))
y=dat$Genger
y=dat$Gender
quantile(x[y==1])
quantile(x[y==0])
dat = read.table("http://www.stat.washington.edu/marzban/390/hist_dat.txt", header=F)
x=dat[,1]
x1=x[1:100]
x2=x[101:200]
hist(x1, xlim=range(x1,x2))
hist(x2, add=T, border=2)
# Rohan Aras
# Math 390 AB
# 1152174
# 6/30/15
# Quiz 2
# Part a)
s1 = rnorm(110, 0, 4)
s2 = rnorm(110, 1.5, 4)
# Part b)
boxplot(s1, s2)
# Part c)
par(mfrow=c(1,1))
# Rohan Aras
# Math 390 AB
# 1152174
# 6/30/15
# Quiz 2
# Part a)
s1 = rnorm(110, 0, 4)
s2 = rnorm(110, 1.5, 4)
# Part b)
boxplot(s1, s2)
# Part c)
set.seed(123)
s1 = rnorm(110,0,0.5)
s2 = rnorm(110,1.5,0.5)
boxplot(s1, s2)
df = read.csv("data/UW_Trip_Data_PassengerC")
setwd("~/Repos/main_repo")
df = read.csv("data/UW_Trip_Data_PassengerC")
df = read.csv("/data/UW_Trip_Data_PassengerC")
getwd
getwd()
setwd("~/Repos/main_repo/Access_Analysis_Rproject")
df = read.csv("data/UW_Trip_Data_PassengerC")
df = read.csv("data/UW_Trip_Data_PassengerC.csv")
library(dplyr)
oneDay = filter(df, ServiceDate==ServiceDate[1])
View(oneDay)
oneRun = filter(oneDay, Run==Run[1])
View(oneRun)
View(df)
df2 = read.csv("data/UW_Trip_Data_QC.csv")
View(df2)
library(dplyr)
df = read.csv("data/UW_Trip_Data_PassengerC.csv")
oneDay = filter(df, ServiceDate==ServiceDate[1])
oneRun = filter(oneDay, Run==Run[1])
View(oneRun)
View(df)
?tail
totalTime = tail(oneRun$ETA) - head(oneRun$ETA)
library(dplyr)
df = read.csv("data/UW_Trip_Data_PassengerC.csv")
oneDay = filter(df, ServiceDate==ServiceDate[1])
oneRun = filter(oneDay, Run==Run[1])
totalTime = tail(oneRun$ETA) - head(oneRun$ETA)
View(oneRun)
totalTime
totalTime = tail(oneRun$ETA,1) - head(oneRun$ETA,1)
totalTime
43020-13500
etDeadheadPct <- function(dfr) {
currentDay = dfr$ServiceDate[1]
currentRun = dfr$Run[1]
ETA = dfr$ETA[1]
timeTaken = vector(length=nrow(dfr))
for(i in 1:nrow(dfr)) {
leftAt = ETA
ETA = dfr$ETA[i]
previousDay = currentDay
previousRun = currentRun
currentDay = dfr$ServiceDate[i]
currentRun = dfr$ServiceRun[i]
if ((previousDay != currentDay) || (previousRun != currentRun)) {
time = 0
} else {
time = ETA - leftAt
}
timeTaken[i] = time
}
return timeTaken
}
getDeadheadPct <- function(dfr) {
currentDay = dfr$ServiceDate[1]
currentRun = dfr$Run[1]
ETA = dfr$ETA[1]
timeTaken = vector(length=nrow(dfr))
for(i in 1:nrow(dfr)) {
leftAt = ETA
ETA = dfr$ETA[i]
previousDay = currentDay
previousRun = currentRun
currentDay = dfr$ServiceDate[i]
currentRun = dfr$ServiceRun[i]
if ((previousDay != currentDay) || (previousRun != currentRun)) {
time = 0
} else {
time = ETA - leftAt
}
timeTaken[i] = time
}
return timeTaken
}
getDeadheadPct <- function(dfr) {
currentDay = dfr$ServiceDate[1]
currentRun = dfr$Run[1]
ETA = dfr$ETA[1]
timeTaken = vector(length=nrow(dfr))
for(i in 1:nrow(dfr)) {
leftAt = ETA
ETA = dfr$ETA[i]
previousDay = currentDay
previousRun = currentRun
currentDay = dfr$ServiceDate[i]
currentRun = dfr$ServiceRun[i]
if ((previousDay != currentDay) || (previousRun != currentRun)) {
time = 0
} else {
time = ETA - leftAt
}
timeTaken[i] = time
}
return(timeTaken)
}
getDeadheadPct(oneRun)
getDeadheadPct <- function(dfr) {
currentDay = dfr$ServiceDate[1]
currentRun = dfr$Run[1]
ETA = dfr$ETA[1]
timeTaken = vector(length=nrow(dfr))
for(i in 1:nrow(dfr)) {
leftAt = ETA
ETA = dfr$ETA[i]
previousDay = currentDay
previousRun = currentRun
currentDay = dfr$ServiceDate[i]
currentRun = dfr$ServiceRun[i]
if ((previousDay != currentDay) | (previousRun != currentRun)) {
time = 0
} else {
time = ETA - leftAt
}
timeTaken[i] = time
}
return(timeTaken)
}
getDeadheadPct(oneRun)
(i in 1:nrow(dfr)) {
leftAt = ETA
ETA = dfr$ETA[i]
previousDay = currentDay
previousRun = currentRun
currentDay = dfr$ServiceDate[i]
currentRun = dfr$ServiceRun[i]
if (previousDay != currentDay) {
time = 0
} else if (previousRun != currentRun) {
time = 0
} else {
time = ETA - leftAt
}
timeTaken[i] = time
}
return(timeTaken)
}
getDeadheadPct <- function(dfr) {
currentDay = dfr$ServiceDate[1]
currentRun = dfr$Run[1]
ETA = dfr$ETA[1]
timeTaken = vector(length=nrow(dfr))
for(i in 1:nrow(dfr)) {
leftAt = ETA
ETA = dfr$ETA[i]
previousDay = currentDay
previousRun = currentRun
currentDay = dfr$ServiceDate[i]
currentRun = dfr$ServiceRun[i]
if (previousDay != currentDay) {
time = 0
} else if (previousRun != currentRun) {
time = 0
} else {
time = ETA - leftAt
}
timeTaken[i] = time
}
return(timeTaken)
}
getDeadheadPct(oneRun)
